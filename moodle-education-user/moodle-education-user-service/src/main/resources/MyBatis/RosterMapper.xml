<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moodle.education.user.service.Mapper.RosterMapper">
<select id="list" resultType="com.moodle.education.user.service.entity.VO.RosterVo">
    select c.classes as classesName,g.gradeName,t.name as teacherName ,s.subjectName from classes as c ,grade as g,teacher as t,subject as s ,roster as r
    where r.classesId = c.classesId and c.gradeId = g.gradeId and t.teacherId = r.teacherId and s.subjectId = r.subjectId and t.teacherId = #{id}
</select>

    <insert id="save" parameterType="com.moodle.education.user.service.entity.Roster">
        insert into roster (teacherId,classesId,subjectId) values(#{teacherId},#{classesId},#{subjectId})
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from roster where rid=#{id}
    </delete>

    <update id="update" parameterType="com.moodle.education.user.service.entity.Roster">
        update roster
            <set>
                <if test="classesId !=null">
                    classesId = #{classesId}
                </if>
                <if test="subjectId != null">
                    subjectId=#{subjectId}
                </if>
            </set>
    </update>

    <select id="listRosterStudent" parameterType="java.lang.Integer" resultType="com.moodle.education.user.service.entity.VO.RosterStudentVo">
        select s.sid,s.studentId,s.name,s.sex,s.mobile,s.parentMobile,s.email,c.classes,g.gradeName as grade
        from roster as r,classes as c,student as s,grade as g
        where s.classesId = r.classesId and c.gradeId = g.gradeId and  r.classesId = c.classesId and r.teacherId = #{id} ;
    </select>
</mapper>
